/* This script creates table in the bronze schema, load the data from CRM and ERP file. Dropping existing tables if the already exists*/

/* Now lets create a stored procedure so that we can run this script everyday to get 
 data to the warehouse from the source. */
CREATE OR ALTER PROCEDURE  bronze.load_bronze AS
BEGIN 
    DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME, @batch_end_time DATETIME;
    BEGIN TRY
        SET @batch_start_time=GETDATE();
        PRINT'************************************';
        PRINT'LOADING BRONZE LAYER';
        PRINT'************************************';

        PRINT'LOADING DATA FROM CRM TABLES';
        PRINT'============================';
        -- =============================Cust_info_start=========================================================
        SET @start_time=GETDATE();
        PRINT'>> TRUNCATING THE TABLE bronze.crm_cust_info';
        TRUNCATE TABLE bronze.crm_cust_info;

        PRINT'>> Inserting bronze.crm_cust_info Table';
        BULK INSERT bronze.crm_cust_info
        FROM '/var/opt/mssql/data/cust_info.csv'
        WITH(
            FIRSTROW=2,
            FIELDTERMINATOR=',',
            TABLOCK
        ) ;
        SET @end_time=GETDATE();
        Print('-----------------------------------');
        PRINT'>>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) +'Seconds';
        Print('-----------------------------------');
        --- select * from bronze.crm_cust_info;
        -- SELECT COUNT(*) FROM bronze.crm_cust_info; -- you can go and check your csv file if we have loaded all the data
-- ===========================================================cust_info_End======================================
        -- Lets load all csv files 
        --======================================================prd_info_start=======================================
        SET @start_time=GETDATE();
        PRINT'>> TRUNCATING THE TABLE bronze.crm_prd_info';
        TRUNCATE TABLE bronze.crm_prd_info;

        PRINT'>> Inserting bronze.crm_prd_info Table';
        BULK INSERT bronze.crm_prd_info
        FROM '/var/opt/mssql/data/prd_info.csv'
        WITH(FIRSTROW=2,
        FIELDTERMINATOR=',',
        TABLOCK);
        SET @end_time= GETDATE();
        Print('-----------------------------------');
        PRINT'>> Load duration:' +CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) +'seconds;'
        Print('-----------------------------------');

       
        -- SELECT * FROM bronze.crm_prd_info;

        -- checking if everything has loaded
        -- SELECT COUNT(*)
        -- FROM bronze.crm_prd_info;
--======================================================prd_info_end=======================================

 --=====================================================sales_details_start=======================================

        SET @start_time=GETDATE();
        PRINT('>> TRUNCATING THE bronze.crm_sales_details TABLE')
        TRUNCATE TABLE bronze.crm_sales_details;
        PRINT'>> Inserting bronze.crm_sales_details Table';
        BULK INSERT bronze.crm_sales_details
        FROM '/var/opt/mssql/data/sales_details.csv'
        WITH(
            FIRSTROW=2,
            FIELDTERMINATOR=',',
            TABLOCK
        );
        SET @end_time= GETDATE();
        Print('-----------------------------------');
        PRINT'>> Load duration:' +CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) +'seconds;'

        /*I HAD DONE MISTAKE HERE,WHILE CREATING A TABLE I DEFINED THE DATATYPE AS DATE WHILE ON ACTUAL CSV FILE IT WAS NOT 
        FORMATTED IN DATE FORMAT SO IT WAS SHOWING Bulk load data conversion error for column 4 (sls_order_dt) ERROR
        SO I WENT BACK AND CHECKED THE DDL AND DROPPED THE TABLE AND CREATED AGAIN WITH INT DATATYPE */
        -- SELECT COUNT(*)
        -- FROM bronze.crm_sales_details;

        -- SELECT * FROM bronze.crm_sales_details;

        -- check check--
        -- make sure you go back and check your source if everything has been loaded, check the row number, check the columns values and so on 
--======================================================sales_details_END=======================================

    PRINT'**********************************';
    PRINT'LOADING DATA FROM ERP TABLE';
    PRINT'===========================';
        -- Loading cust table from erp
--======================================================cust_az1_START=======================================

        SET @start_time=GETDATE();
        PRINT'>>Truncating bronze.erp_cust_az1table';
        TRUNCATE TABLE bronze.erp_cust_az12;
        PRINT'>> Inserting bronze.erp_cust_az1 table';
        BULK INSERT bronze.erp_cust_az12
        FROM '/var/opt/mssql/data/cust_az12.csv'
        WITH(
            FIRSTROW=2,
            FIELDTERMINATOR=',',
            TABLOCK
        );
        SET @end_time= GETDATE();
        Print('-----------------------------------');
        PRINT'>> Load duration:' +CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) +'seconds;'
        Print('-----------------------------------');
        -- check check--
        -- SELECT * FROM bronze.erp_cust_az12;

        -- count the rows

        --SELECT COUNT(*)
        -- FROM bronze.erp_cust_az12;

 --======================================================cust_az1_END=======================================

        -- ======Loading loc table-----

--======================================================loc_a101_START=======================================

        PRINT'>>Truncating bronze.erp_loc_a101 table'
        TRUNCATE TABLE bronze.erp_loc_a101;
        PRINT'>> Inserting bronze.erp_loc_a101 Table';
        BULK INSERT bronze.erp_loc_a101
        FROM '/var/opt/mssql/data/loc_a101.csv'
        WITH(
            FIRSTROW=2,
            FIELDTERMINATOR=',',
            TABLOCK
        );
        -- check check
        SET @start_time=GETDATE();
        SET @end_time= GETDATE();
        PRINT'>> Load duration:' +CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) +'seconds';
        -- SELECT * FROM bronze.erp_loc_a101;

--======================================================loc_a101_END=======================================

--======================================================cat_g1v2 START=======================================

        -- ======== loading  px_cat File
        PRINT'>>Truncatingbronze.erp_px_cat_g1v2 table'
        TRUNCATE TABLE bronze.erp_px_cat_g1v2;
        PRINT'>> Inserting bronze.erp_px_cat_g1v22 Table';
        BULK INSERT bronze.erp_px_cat_g1v2
        FROM '/var/opt/mssql/data/px_cat_g1v2.csv'
        WITH(
            FIRSTROW=2,
            FIELDTERMINATOR=',',
            TABLOCK
        );
        SET @end_time= GETDATE();
        PRINT'>> Load duration:' +CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) +'seconds';

 --======================================================cat_g1v2_END=======================================

        -- SELECT * FROM bronze.erp_px_cat_g1v2;

        -- == Now we have a very good script to run to load the data into our datawarehouse. so we have to run everyday to get new data from the source
        -- amazing isnt it. 
        SET @batch_end_time=GETDATE();
 

    PRINT'TOTAL LOAD DURATION:' +CAST(DATEDIFF(SECOND, @batch_start_time,@batch_end_time) AS NVARCHAR) +'Seconds';
    END TRY
    BEGIN CATCH -- WE HAVE TO SPECIFY WHAT SHOULD SQL DO INCASE OF ERROR
        PRINT'============'
        PRINT'ERRO OCCURED DURING LOADING BRONZE LAYER';-- WE CAN PRINT THE ERROR MESSAGE
        PRINT'ERROR MESSAGE' + ERROR_MESSAGE(); --  SAME
        PRINT'ERROR MESSAGE'+CAST(ERROR_NUMBER() AS NVARCHAR);
        PRINT'ERROR MESSAGE'+CAST(ERROR_STATE() AS NVARCHAR);
    END CATCH
END
-- REFRESH THE DATABASE AND GO TO PROGRAMMABILITY AND CHECK THE STORED PROCEDURES IF IT HAS BEEN CREATED OR NOT?
-- YOU CAN CREATE A NEW QUERY AND CHECK IF IT WILL WORK OR NOT
-- EXEC bronze.load_bronze
